\documentclass{beamer}[10pt, c, a4]
\usepackage[latin1]{inputenc}
\usepackage[T1]{fontenc}
\usepackage[frenchb]{babel}
%\usepackage[francais]{babel}
\usepackage{listings}
\usepackage{verbatim}
\usepackage{graphicx}

\lstset{language=html, inputencoding=latin1, breaklines=true, basicstyle=\small}

%[t] : le texte sera aligné en haut.
%[b] : le texte sera aligné en bas.
%[c] : le texte sera centré verticalement (la valeur par défaut).

\usetheme{Antibes}
%\definecolor{LHCblue}{HTML}{7B5EA3}
\definecolor{LHCblue}{HTML}{058013}
\usecolortheme[named=LHCblue]{structure}
\title{HTML : Historique, technique et nouveaux usages}
%\setbeamertemplate{blocks}[rounded][shadow=true]
\setbeamertemplate{footline}[frame number]

\begin{document}

\AtBeginSection[]{
  \begin{frame}{Sommaire}
  \small \tableofcontents[currentsection, hideothersubsections]
  \end{frame} 
}

\begin{frame}
\titlepage
\end{frame}

\begin{frame}
\frametitle{Table des matières}
\tableofcontents[hideothersubsections]
\end{frame}

\section{Introduction}

\subsection{Présentation}

\begin{frame}
\frametitle{HTML pour HyperText Markup Langage}
\begin{block}{}
Format de données conçu pour représenter les pages web et permettant d'écrire de l'hypertexte (systèmes contenant des noeuds liés entre eux par des hyperliens permettant de passer d'un noeud à un autre, e.g. : passage d'une page web à une autre dans le World Wide Web).
\end{block}
%\begin{itemize}
Dérivé du Standard Generalized Markup Language (SGML, langage normalisé de balisage généralisé).
%\end{itemize}
\end{frame}

\subsection{Un web sémantique}

\begin{frame}
\frametitle{Langage de balisage}
\begin{itemize}
\item Utilise des \textbf{balises} pour structurer un document et son contenu qui est ensuite compréhensible par un programme informatique (permet un traitement automatique du contenu).
\bigbreak
\item A terme, cette évolution permettra aux machines de réaliser toutes les tâches qui amèneront à un Web plus intelligent et rendra la recherche d'informations plus efficace (but du \textbf{web sémantique}).
\end{itemize}
\end{frame}

\subsection{Un outil puissant}

\begin{frame}
\begin{block}{}
HTML permet aussi :
\begin{itemize}
\item D'inclure des ressources multimédia (images, vidéos, audio, canvas (pour le dessin 2D/3D dans le navigateur))
\item De créer des formulaires de saisie
\item De créer des tableaux
\item De créer des programmes informatiques (intranet (restreint à la partie site web interne))
\end{itemize}
\end{block}
\end{frame}

\begin{frame}
\begin{itemize}
\item HTML est \textbf{intéropérable} (e.g. : site web desktop/mobile, différents navigateurs et versions, personnes malvoyantes/malentendantes, etc.)
\item Utilisé conjointement avec d'autres technologies (e.g. : Javascript, CSS (pour la présentation), PHP/Python/C/C++, etc.)
\item Extension : .html (parfois .htm)
\end{itemize}
\end{frame}

\begin{frame}
\begin{block}{}
HTML (et plus généralement les technologies du World Wide Web) est promu par le World Wide Web Consortium (W3C), qui regroupe en février 2013, 383 entreprises partenaires (dont Mozilla, Microsoft, Apple)
\end{block}
\begin{block}{Remarques}
\begin{itemize}
\item Quand on parle de HTML5, on parle souvent d'un ensemble de technologies comprenant HTML5, CSS3, Javascript, permettant ainsi de développer des applications.
\item HTML5 fait de la concurrence aux plugins tiers tel que Flash Player d'Adobe ou Silverlight de Microsoft.
\end{itemize}
\end{block}
\end{frame}

\section{Evolution du langage, son histoire}

\subsection{Chronologie}

\begin{frame}
\frametitle{Origines (1989 - 1992)}
Fait parti des 3 inventions du World Wide Web (W3), avec HTTP et les adresses web.
Conçu pour écrire des documents hypertextuels (appelés aujourd'hui « page web »)
\bigbreak
1ers éléments du HTML :
\begin{itemize}
\item Titre du document 
\item Hyperliens
\item Structuration en titre, sous titre, texte brut
\item Listes
\end{itemize}
Pas de spécifications (les navigateurs gèrent le HTML comme ils le souhaitent)
\end{frame}

\begin{frame}
\frametitle{Apports de NCSA Mosaic (1993)}
\begin{itemize}
\item Tentative de normalisation du langage jusqu'à la fin des années 1990, mais infructueuse.
\item Apparition de la balise \textbf{<img>} (pour les images GIF et XBM) et des formulaires grâce au navigateur NCSA Mosaic => 1ers sites web de commerce électronique.
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{Apports de Netscape (1994)}
\begin{itemize}
\item Apparitions de nouveaux éléments de présentation : attributs de texte, clignotement, centrage, etc.
\item Apparition des tableaux pour améliorer la présentation des documents.
\item Divergence de HTML : les développeurs de navigateurs cherchent à maximiser l'impact visuel
\item Extension des capacités de description sémantiques (logos, notes de bas de pages, etc.) et les domaines d'application (mathématiques) de HTML par les concepteurs.
\item Apparition des premières feuilles de style en cascade (CSS)
\end{itemize}
\bigbreak
\end{frame}

\begin{frame}
\frametitle{HTML 2.0 (1995 - 1996)}
\begin{itemize}
\item Création du W3C (World Wide Web Consortium) (mars 1995)
\item Abandon de HTML+ (brouillon d'html 3) ajoutant notamment : les tableaux, les figures et les expressions mathématiques (septembre 1995)
\item Fin 1995 : Finalisation de la RFC (Request For Comment) décrivant HTML 2.0 (ne prend pas en compte les améliorations de Netscape).
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{HTML 3.2 et HTML 4.0 (1997)}
\begin{itemize}
\item Janvier 1997 : HTML 3.2
\newline
Prend en compte les ajouts de Netscape et Internet Explorer : 
\begin{itemize}
\item Standardisation des tableaux.
\item Ajout d'éléments de présentation et de balises destinées à recevoir du css et du javascript.
\end{itemize}
\bigbreak
\item Décembre 1997 : spécification de HTML 4.0
\begin{itemize}
\item Standardise les styles, scripts, frames, objets (inclusion généralisée de contenu).
\item Séparation plus explicite entre la forme et le fond d'un document.
\end{itemize}
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{XHTML (2000 - 2006)}
\begin{itemize}
\item XHTML (Extensible HyperText Markup Language) est un langage de balisage fondé sur la syntaxe du XML (Extensible Markup Language) et conçu à l'origine comme successeur de HTML car sa syntaxe est plus simple à utiliser.
\bigbreak
\item Aucune fonctionnalité n'a été rajoutée ou retirée entre XHTML et HTML 4. Seule la syntaxe change.
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{HTML5 (2007 - 2014+)}
\begin{itemize}
\item Dernière révision majeure de HTML. Début du travail en 2007, développement à partir de 2013.
\item La syntaxe de HTML5 est complètement revue pour la rentre le plus simple et intuitif possible à l'utilisation.
\item De plus, de nombreuses nouvelles balises sont introduites, notamment pour donner un sens au document (pour un web plus sémantique).
\item Le langage comprend également une couche application avec de nombreuses API, ainsi qu'un algorithme afin de pouvoir traiter les documents à la syntaxe non conforme.
\item Le W3C encourage les développeurs Web à utiliser HTML5 dès maintenant.
\end{itemize}
\end{frame}

\section{Techniques}

\subsection{Les balises}

\begin{frame}
\frametitle{Les balises}
La structure d'une page HTML est construite à partir de balises qui ont pour rôle l'organisation du contenu.
\bigbreak
Il existe plusieurs sorte de balise :
\begin{itemize}
\item \textbf{Les balises en paires} s'ouvrent et se referment plus loin (le contenu est au milieu)
\item \textbf{Les balises orpheline} qui servent à insérer un élément à un endroit précis.
\end{itemize}
\end{frame}

\begin{frame}[containsverbatim]
\frametitle{Exemple de balises en paires}
\begin{lstlisting}[language=html, inputencoding=latin1]
<block>
	Il y a du texte Il y a du texte
    	Il y a du <inline>texte</inline>
	Il y a du texte Il y a du texte
</block>
\end{lstlisting}
\begin{block}{Remarques}
Une balise doit donner un sens au contenu qu'elle englobe.
\break
Il est possible d'imbriquer les balises les une dans les autres (principe d'encapsulation).
\break
Les balises doivent être fermées dans l'ordre de leurs ouvertures :
\break
<xxx><yyyy>............</xxx></yyyy> n'est pas correct !
\end{block}
\end{frame}

\begin{frame}[containsverbatim]
\frametitle{Exemple de balise orpheline}
\begin{block}{}
\begin{lstlisting}[language=html, inputencoding=latin1]
<img src="....." alt="......" /> 
\end{lstlisting}
\end{block}
\begin{block}{Remarque}
Le \textbf{/} (slash) final n'est pas obligatoire. Il sert juste à différencier les balises orphelines des balises en paires.
\end{block}
\end{frame}

\subsection{Les attributs}

\begin{frame}[containsverbatim]
\frametitle{Les attributs}
\begin{block}{}
L'attribut sert à ajouter des informations à une balise (e.g. : l'encodage d'un document, le chemin vers une ressource, etc.).
\end{block}
\begin{block}{Remarques}
Un attribut s'écrit toujours sous la forme :
\begin{lstlisting}[language=html, inputencoding=latin1]
attribut="valeur"
\end{lstlisting}
Cependant, la valeur de l'attribut est parfois optionnelle et prend dans ce cas une valeur par défaut (e.g. : pour rendre un champ de formulaire obligatoire, on peut rajouter required dans la balise, sans lui donner de valeur)
\end{block}
\end{frame}

\begin{frame}
\begin{block}{Remarques}
\begin{itemize}
\item Les attributs se placent dans les balises ouvrantes
\item La valeur doit être écrite entre guillemets ("") (mais ce n'est pas une obligation tant que la valeur ne fait pas plus d'un mot)
\item Les attributs sont caractéristiques du type de la balises, on ne peut pas mettre n'importe quel attribut dans une balise.
\end{itemize}
\end{block}
\end{frame}

\begin{frame}
\begin{block}{L'attribut id}
L'attribut \textbf{id} permet d'attribuer un identifiant unique à un élément. Il ne peut y avoir plusieurs élément avec le même identifiant. Cet identifiant peut servir à structurer le document grâce à CSS, mais il peut aussi servir dans une encre.
\end{block}
\begin{block}{L'attribut class}
L'attribut \textbf{class}, contrairement à l'attribut à l'id, n'est pas unique, c'est-à-dire que l'on peut ré-utiliser la classe dans une autre balise. Il permet de styliser une partie du document avec l'aide de CSS.
\end{block}
\end{frame}

\subsection{Quelques balises}

\begin{frame}[containsverbatim, allowframebreaks]
\frametitle{Présentation rapide de quelques balises}
\begin{block}{Balises multimédia}
\begin{itemize}
\item Balise \textbf{<video></video>} : permet l'intégration d'une vidéo dans un document
\item Balise \textbf{<audio></audio>} : permet l'intégration d'un son dans un document
\item Balise \textbf{<img />} : permet l'intégration d'images dans un document
\end{itemize}
\end{block}
\bigbreak
\begin{block}{Remarque}
Pour afficher des boutons de contrôle dans ces balises, il faut rajouter l'attribut \textbf{controls}.
\begin{lstlisting}[language=html, inputencoding=latin1]
<audio src="my_song.mp3" controls></audio>
\end{lstlisting}
\end{block}

\bigbreak

\begin{block}{Balises de structure}
\begin{itemize}
\item Balise \textbf{<header></haeder>} : entête d'une section déjà existante
\item Balise \textbf{<article></article>} : section de contenu indépendante, pouvant être extraite individuellement du document ou syndiquée (flux RSS ou équivalent), sans pénaliser sa compréhension
\item Balise \textbf{<section></section>} : section de contenu plus générale que <article> (mais doit être placé dans un article, par exemple).
\end{itemize}
\end{block}
\bigbreak
\begin{block}{Balises de structure}
\begin{itemize}
\item Balise \textbf{<aside></aside>} : section dont le contenu est un complément par rapport à ce qui l'entoure, qui n'est pas forcément en lien direct avec le contenu mais qui peut apporter des informations supplémentaires.
\item Balise \textbf{<nav></nav>} : Section possédant des liens de navigation principaux (au sein du document ou vers d'autres pages)
\item Balise \textbf{<footer></footer>} :  Section de conclusion d'une section ou d'un article, voire du document entier (pied de page).
\end{itemize}
\end{block}

\begin{figure}
\centering
\includegraphics[scale=0.4]{img/struct.png}
\caption{Exemple de structuration de page HTML - Copyright alsacreations.com}
\end{figure}

\begin{itemize}
\item Balises \textbf{<form>, <input>, <textarea>, <select>, etc}. : permettent la création de formulaires
\item Balise \textbf{<table>, <tr>, <td>, etc}. : permettent la création de tableaux
\item Balise \textbf{<p>} : indique qu'il s'agit d'un paragraphe
\item Balise \textbf{<strong>, <em>} : indiquent qu'il s'agit d'un contenu plus ou moins important
\item Balise \textbf{<h1> à <h6>} : indiquent les niveaux de titres du plus important (h1) au moins important (h6)
\item Balise \textbf{<a>} : pour naviguer d'une ressource à une autre (peut-être un lien interne ou externe ou une encre)
\end{itemize}
\end{frame}

\begin{frame}[containsverbatim]
\frametitle{Les balises div et span}
\begin{block}{}
Les balises \textbf{<div>} et \textbf{<span>} servaient à l'époque à structurer le document HTML : \textbf{<div>} pour agencer le contenu et \textbf{<span>} pour associer un style à un élément. Grâce à HTML5, ce n'est plus nécessaire.
\medbreak
Sémantiquement ces balises n'ont pas de sens particulier.
\end{block}
\end{frame}

\subsection{HTML \& CSS}

\begin{frame}[containsverbatim]
\frametitle{Structure de base d'une page HTML5}
\begin{lstlisting}[language=html, inputencoding=latin1, inputencoding=latin1]
<!doctype html>
<html lang="fr"> <!-- Permet aux liseuses de savoir quelle langue utiliser -->
   	 <head>
       	 <meta charset="utf-8" /> <!-- Encodage de la page -->
       	 <title>Yoo !</title>
        	<!-- script et compagnie -->
	</head>
	
	
	<body>
   	 <!-- Le blabla de la page : img, p, progress, form, table, etc. -->
	</body>
</html>
\end{lstlisting}
\end{frame}

\begin{frame}[containsverbatim]
\frametitle{Le CSS}
\begin{itemize}
\item Le CSS (Cascading Style Sheets) s'occupe de la mise en forme d'un document HTML. Il s'utilise conjointement avec celui-ci.
\bigbreak
\item Pour inclure une feuille de style dans un document html, il faut rajouter dans l'entête : 
\begin{lstlisting}[language=html, inputencoding=latin1]
<link rel="stylesheet" href="style.css" />
\end{lstlisting}
\end{itemize}
\end{frame}

\begin{frame}
\begin{figure}
\centering
\includegraphics[scale=0.23]{img/Google_WithoutCSS.png}
\caption{Site web google.fr \textbf{sans} CSS}
\end{figure}
\end{frame}

\begin{frame}
\begin{figure}
\centering
\includegraphics[scale=0.23]{img/Google_CSS.png}
\caption{Site web google.fr \textbf{avec} CSS}
\end{figure}
\end{frame}

\section{Nouveaux usages}

\subsection{Domaine 3D}

\begin{frame}
\frametitle{WebGL}
\begin{block}{}
\begin{itemize}
\item Le \textbf{WebGL} est une spécification d'affichage 3D pour les navigateurs web qui permet d'utiliser le standard OpenGL ES 2.0 grâce à l'élément \textbf{Canvas} de HTML5 afin de créer un environnement 3D.
\item Il a été introduit par le Khronos Group.
\end{itemize}
\end{block}
\end{frame}

\subsection{Echange et communication}

\begin{frame}
\frametitle{Websockets}
\begin{block}{}
\textbf{Websockets} est un protocole de communication bidirectionnel permanent entre un client et un serveur via un seul socket TCP (Transmission Control Protocol = permet de transférer des données).
\end{block}
Quelques exemples d'utilisation :
\begin{itemize} 
\item Discussion instantanée (visioconférence, chat)
\item Jeu multijoueur en ligne
\end{itemize}
\begin{block}{Remarque}
Un socket est une interface logicielle permettant d'exploiter facilement et de manière uniforme les services d'un protocole réseau.
\end{block}
\end{frame}

\subsection{Application internet avancée}

\begin{frame}
\frametitle{Rich Internet Application (RIA)}
\begin{block}{A quoi servent les RIA ?}
Les RIA sont des applications utilisable en ligne ou hors-ligne grâce à des API introduites par HTML5.
\end{block}
\bigbreak
Exemples d'API :
\begin{itemize} 
\item \textbf{WebStorage} : une alternative plus complète aux cookies
\item \textbf{AppCache} : permettant aux applications d'avoir leur propre cache local
\end{itemize}
\end{frame}

\subsection{Ergonomie \& intéractivité}

\begin{frame}
\begin{block}{Autres usages de HTML5}
\begin{itemize}
\item Le glisser/déposer
\item Le couper/coller
\item La géolocalisation
\item L'affichage de barres de progression en pourcentage (progress, e.g. : upload)
\item L'affiche de barres de progression en volume (meter, e.g. : espace disque utilisé)
\item Contenu éditable
\end{itemize}
\end{block}
Certains système d'exploitation utilise une interface et un écosystème d'applications développées à l'aide de HTML5 (e.g. : Firefox OS ou Google Chrome OS).
\end{frame}

\subsection{La sémantique}

\begin{frame}[containsverbatim, allowframebreaks]
\frametitle{Les microdatas}
\begin{block}{}
Les \textbf{microdatas} sont des attributs intégrés par HTML5 ayant pour objectif de donner du sens aux éléments HTML. Cela permet d'éviter l'utilisation de l'attribut \textbf{class} pour inclure les \textbf{microformats}.
\end{block}

\begin{itemize}
\item \textbf{itemscope} : il permet de créer un item dont le type peut-être précisé grâce à l'attribut \textbf{itemtype}
\item \textbf{itemtype} : couplé à \textbf{itemscope}, il accueille une URL vers la référence du schéma (e.g. : http://schema.org/Review) qui devra respecter les valeurs de ce schéma
\item \textbf{itemid} : lorsque l'item possède une référence globale unique, comme par exemple un l'identifiant d'un livre (isbn). Il est attribué en même temps que l'attribut \textbf{itemscope}.
\item \textbf{itemprop} : il est porteur d'une valeur permettant de préciser la nature d'une donnée au sein d'un schéma spécifié précédemment (e.g. : un code postal pour un schéma sur les adresses postal).
\item \textbf{itemref} : il permet de faire un lien complémentaire entre deux données dispersées sur le document.
\end{itemize}
\begin{lstlisting}[language=html, inputencoding=latin1]
<p itemscope itemtype="http://schema.org/Restaurant" itemref="restaurant-cruchon">
    Le restaurant <span itemprop="name">Le Cruchon Repus</span> est clairement le meilleur restaurant de Paris.
</p>
\end{lstlisting}
\end{frame}

\end{document}