% Copyright 2004 by Till Tantau <tantau@users.sourceforge.net>.
%
% In principle, this file can be redistributed and/or modified under
% the terms of the GNU Public License, version 2.
%
% However, this file is supposed to be a template to be modified
% for your own needs. For this reason, if you use this file as a
% template and not specifically distribute it as part of a another
% package/program, I grant the extra permission to freely copy and
% modify this file as you see fit and even to delete this copyright
% notice. 

\documentclass[french]{beamer}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}

% There are many different themes available for Beamer. A comprehensive
% list with examples is given here:
% http://deic.uab.es/~iblanes/beamer_gallery/index_by_theme.html
% You can uncomment the themes below if you would like to use a different
% one:
%\usetheme{AnnArbor}
%\usetheme{Antibes}
%\usetheme{Bergen}
%\usetheme{Berkeley}
%\usetheme{Berlin}
%\usetheme{Boadilla}
%\usetheme{boxes}
%\usetheme{CambridgeUS}
%\usetheme{Copenhagen}
%\usetheme{Darmstadt}
%\usetheme{default}
%\usetheme{Frankfurt}
%\usetheme{Goettingen}
%\usetheme{Hannover}
%\usetheme{Ilmenau}
%\usetheme{JuanLesPins}
%\usetheme{Luebeck}
%\usetheme{Madrid}
%\usetheme{Malmoe}
%\usetheme{Marburg}
%\usetheme{Montpellier}
%\usetheme{PaloAlto}
%\usetheme{Pittsburgh}
%\usetheme{Rochester}
%\usetheme{Singapore}
%\usetheme{Szeged}
\usetheme{Warsaw}

\title{Méthodes agiles -\newline \space eXtreme Programming}


\author{ARROYO Lilian \and BEGIN Nicolas}

\date{4 Décembre 2014}

\AtBeginSection[] {
    \begin{frame}<beamer>
    \frametitle{Plan} %
    \tableofcontents[currentsection]  
    \end{frame}
    \lattersubsectfalse
}

\begin{document}

\begin{frame}
  \titlepage
\end{frame}

\begin{frame}
  \frametitle{Plan}
  \tableofcontents
\end{frame}


\section{Introduction}

\begin{frame}
  \frametitle{Introduction}
  \begin{itemize}
  \item Méthode de gestion de projet
  \end{itemize}
  Apparition suite aux nombreux projets informatiques qui se sont terminés avec un bilan non concluant.
  
  \begin{block}{Les causes}
    \begin{itemize}
    \item Des retards sur le planning
    \item Des dépassements de budget
    \item Insatisfaction du client
    \end{itemize}
  \end{block}
\end{frame}

\begin{frame}{Historique}
    \begin{itemize}
    \item Création de la première méthode agile dans les années 80
    \item De nombreuses méthodes arrivent par la suite
    \item Scrum et eXtreme Programming sont les deux plus utilisées de nos jours
    \end{itemize}
    
    \begin{block}{Manifeste Agile}
    En 2001, le \textit{Manifeste agile} fut écrit par 17 experts en développement de logiciel. Ce fut la première référence regroupant les concepts et les principes des méthodes agiles.
    \end{block}
\end{frame}


\section{Concepts}
\subsection{Valeurs fondatrices}
\begin{frame}
  \frametitle{Concepts}
  \begin{block}{Valeurs fondatrices}
    \begin{itemize}
        \item Les individus et leurs interactions plus que les processus et les outils
        \item Des logiciels opérationnels plus qu’une documentation exhaustive
        \item La collaboration avec les clients plus que la négociation contractuelle
        \item L'adaptation au changement plus que le suivi d’un plan
    \end{itemize}
    \end{block}
\end{frame}
\subsection{Principes}
\begin{frame}
  \frametitle{Concepts}
  \begin{block}{Principes}
    \begin{itemize}
        \item Délivrer rapidement et très fréquemment des versions opérationnelles, pour favoriser un feed-back client permanent
        \item Être ouvert au changement
        \item Assurer une coopération forte entre client et développeurs
        \item Le fonctionnement de l’application est le premier indicateur de l'avancement du projet
        \item Garder un rythme soutenable
        \item Viser l'excellence technique et la simplicité
        \item Se remettre en cause régulièrement afin d'améliorer ce qui a été fait
    \end{itemize}
    \end{block}
\end{frame}

\section{Technique}
\subsection{Mise en place des concepts}
\begin{frame}{Cycle de développement}
        Un des premiers concepts des méthodes agiles est de pouvoir réagir aux changements, pour cela des itérations de programmation ont été mises en place.
%        Pour intégrer les changements qui peuvent survenir, pour obtenir un retour de la part des utilisateurs ou du client et pour vérifier le bon fonctionnement des modules développés, les méthodes agiles fonctionnent par itérations.
        \begin{block}{Un développement itéré}
            Une itération est un cycle court pendant lequel des fonctions vont être développées en s'assurant de fournir un logiciel fonctionnel au client à la fin de celle-ci.
    \end{block}
\end{frame}


\begin{frame}{Un développement incrémental}
    A chacune de ces itérations des fonctionnalités seront ajoutées ou modifiées, et des tests améliorés afin de vérifier son bon fonctionnement. 
\newline \newline
Un incrément est le résultat de la production d’un sous-ensemble de fonctions et chaque itérations est composée de un ou plusieurs incréments selon les besoins.
\end{frame}

\begin{frame}{Viser l'excellence}
\begin{itemize}
\item Mise en place de prototypes
\item Toujours plus innovant et efficace
\item Test des prototypes puis intégration
\end{itemize}

\begin{block}{Avantages}
    Si ces derniers fournissent d'avantage d'améliorations que de complexifications alors ils seront ajoutées au logiciel.
\end{block}

Bien entendu, certains prototypes seront un échec, mais ils font partie intégrante de l'optimisation.
\end{frame}

\begin{frame}{Collaboration}
L’une des particularités des méthodes agiles est de considérer le groupe projet comme une équipe plus qu’une somme de personnes.
\begin{block}{Collaboration}
La composante essentielle de cet aspect collaboratif est la confiance accordée à chaque membres de l’équipe. Les apports de chacun doivent avoir comme unique objectif celui de faire progresser le projet.
\end{block}
\end{frame}

\begin{frame}{Processus d’intégration en continue}
\begin{block}{Processus d’intégration en continue}
L’intégration continue consiste à intégrer au plus tôt tous les développements réalisés dans la version en cours.
\end{block}
Ainsi, dès qu’une fonction est jugée « finie », elle est intégrée dans la version en cours.
\end{frame}

\begin{frame}{Conception différente}
Les méthodes agiles demandent à ceux qui les utilisent de changer leur approche et d’oublier certaines des habitudes acquises avec des méthodes classiques.
\begin{block}{}
\begin{itemize}
\item accepter le changement
\item privilégier un logiciel opérationnel à la documentation
\item raisonner uniquement dans l’intérêt du projet
\item préférer le bon sens aux règles et usages
\end{itemize}
\end{block}
\end{frame}

\section{eXtreme Programming}

\begin{frame}{eXtreme Programming}
L'objectif principal de cette méthode est de réduire les coûts du changement. 
\begin{block}{Fonctionnement}
    \begin{itemize}
    \item Test à chaque développement de fonction
    \item Revue de code par un binôme
    \item Réécriture du code en continue pour améliorer la lisibilité et faciliter les potentiels changements (refactoring)
    \item Itérations de 1 à 2 semaines
    \end{itemize}
\end{block}
\end{frame}

\begin{frame}
    Le client pilote le projet.
    
\begin{block}{Client}
\begin{itemize}
    \item Il suit l'avancement du projet
    \item Il a le choix à chaque itérations
    \item Il a rapidement accès à une première version
    \end{itemize}
    \end{block}
\end{frame}

\section{Conclusion}
\begin{frame}
  \frametitle{Conclusion}
  \begin{block}{Les pour}
    \begin{itemize}
    \item Une version disponible rapidement
    \item Retour immédiat du client sur la conception
    \item Possibilité de changements fréquents
    \end{itemize}
  \end{block}
  
  \begin{block}{Les contre}
    \begin{itemize}
    \item L'équipe doit être à l'aise avec les changements de ses projets
    \item Perte de potentiel si le client n'est pas disponible fréquemment
    \item Inutile si le client sait déjà précisément ce qu'il veut
    \end{itemize}
  \end{block}
\end{frame}

\begin{frame}
    \begin{center}
Merci de votre attention !
    \end{center}
\end{frame}
\end{document}