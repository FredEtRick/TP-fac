<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>My Project: sd_vector Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">My Project
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="classes.html"><span>Class&#160;Index</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="structsd__vector-members.html">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">sd_vector Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="vector_8h_source.html">vector.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a472959c76a43d9d46eba16003fc3cfe6"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a472959c76a43d9d46eba16003fc3cfe6"></a>
size_t&#160;</td><td class="memItemRight" valign="bottom"><b>v_size</b></td></tr>
<tr class="separator:a472959c76a43d9d46eba16003fc3cfe6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a059caa7cb35931f082a0455e803da887"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a059caa7cb35931f082a0455e803da887"></a>
size_t&#160;</td><td class="memItemRight" valign="bottom"><b>v_capacity</b></td></tr>
<tr class="separator:a059caa7cb35931f082a0455e803da887"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7c0bc3fd534ea899daadc3ed4e606fc"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab7c0bc3fd534ea899daadc3ed4e606fc"></a>
void **&#160;</td><td class="memItemRight" valign="bottom"><b>content</b></td></tr>
<tr class="separator:ab7c0bc3fd534ea899daadc3ed4e606fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbd8abca27f8841a1cc20a7680b194a0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acbd8abca27f8841a1cc20a7680b194a0"></a>
int(*&#160;</td><td class="memItemRight" valign="bottom"><b>is_null</b> )(struct <a class="el" href="structsd__vector.html">sd_vector</a> *this)</td></tr>
<tr class="separator:acbd8abca27f8841a1cc20a7680b194a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a294b3a3c3e3f3dbec5268a2cf7978f26"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a294b3a3c3e3f3dbec5268a2cf7978f26"></a>
size_t(*&#160;</td><td class="memItemRight" valign="bottom"><b>size</b> )(struct <a class="el" href="structsd__vector.html">sd_vector</a> *this)</td></tr>
<tr class="separator:a294b3a3c3e3f3dbec5268a2cf7978f26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa931de41bf0d6949a9de37f1054d9a63"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa931de41bf0d6949a9de37f1054d9a63"></a>
void(*&#160;</td><td class="memItemRight" valign="bottom"><b>resize</b> )(size_t size, void *value, struct <a class="el" href="structsd__vector.html">sd_vector</a> *this)</td></tr>
<tr class="separator:aa931de41bf0d6949a9de37f1054d9a63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affabe7e3cefc87b3a7c82a8b236da0dd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="affabe7e3cefc87b3a7c82a8b236da0dd"></a>
size_t(*&#160;</td><td class="memItemRight" valign="bottom"><b>capacity</b> )(struct <a class="el" href="structsd__vector.html">sd_vector</a> *vector)</td></tr>
<tr class="separator:affabe7e3cefc87b3a7c82a8b236da0dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83cabcc4ea964fcfb3db3b9a4d2d9f6d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a83cabcc4ea964fcfb3db3b9a4d2d9f6d"></a>
int(*&#160;</td><td class="memItemRight" valign="bottom"><b>is_empty</b> )(struct <a class="el" href="structsd__vector.html">sd_vector</a> *this)</td></tr>
<tr class="separator:a83cabcc4ea964fcfb3db3b9a4d2d9f6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2875fc2ba61e1c4b98e9165d505756e9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2875fc2ba61e1c4b98e9165d505756e9"></a>
void(*&#160;</td><td class="memItemRight" valign="bottom"><b>reserve</b> )(size_t new_capacity, struct <a class="el" href="structsd__vector.html">sd_vector</a> *this)</td></tr>
<tr class="separator:a2875fc2ba61e1c4b98e9165d505756e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6d0d3e120c43a8fe61b02ac54e8665f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac6d0d3e120c43a8fe61b02ac54e8665f"></a>
void(*&#160;</td><td class="memItemRight" valign="bottom"><b>shrink_to_fit</b> )(struct <a class="el" href="structsd__vector.html">sd_vector</a> *this)</td></tr>
<tr class="separator:ac6d0d3e120c43a8fe61b02ac54e8665f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a2042f39af6e1b8fa388f8b35765a41"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6a2042f39af6e1b8fa388f8b35765a41"></a>
void *(*&#160;</td><td class="memItemRight" valign="bottom"><b>at</b> )(size_t i, struct <a class="el" href="structsd__vector.html">sd_vector</a> *this)</td></tr>
<tr class="separator:a6a2042f39af6e1b8fa388f8b35765a41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23e7edf2cbe0fa84b465e06038fbde63"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a23e7edf2cbe0fa84b465e06038fbde63"></a>
void *(*&#160;</td><td class="memItemRight" valign="bottom"><b>front</b> )(struct <a class="el" href="structsd__vector.html">sd_vector</a> *this)</td></tr>
<tr class="separator:a23e7edf2cbe0fa84b465e06038fbde63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad58efa1ebd4f5d01c58741658b2ee3bc"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad58efa1ebd4f5d01c58741658b2ee3bc"></a>
void *(*&#160;</td><td class="memItemRight" valign="bottom"><b>back</b> )(struct <a class="el" href="structsd__vector.html">sd_vector</a> *this)</td></tr>
<tr class="separator:ad58efa1ebd4f5d01c58741658b2ee3bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6100113f0f8be575f6bb90b2bd230d54"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6100113f0f8be575f6bb90b2bd230d54"></a>
void(*&#160;</td><td class="memItemRight" valign="bottom"><b>push_back</b> )(void *element, struct <a class="el" href="structsd__vector.html">sd_vector</a> *this)</td></tr>
<tr class="separator:a6100113f0f8be575f6bb90b2bd230d54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c3ee953d9c74baa29de63b17bc697b9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5c3ee953d9c74baa29de63b17bc697b9"></a>
void(*&#160;</td><td class="memItemRight" valign="bottom"><b>pop_back</b> )(struct <a class="el" href="structsd__vector.html">sd_vector</a> *this)</td></tr>
<tr class="separator:a5c3ee953d9c74baa29de63b17bc697b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9b1db64a347287b71ba5c07b6c7a3d4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac9b1db64a347287b71ba5c07b6c7a3d4"></a>
void(*&#160;</td><td class="memItemRight" valign="bottom"><b>insert</b> )(size_t begin, void *value, size_t repeater, struct <a class="el" href="structsd__vector.html">sd_vector</a> *this)</td></tr>
<tr class="separator:ac9b1db64a347287b71ba5c07b6c7a3d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4eeab0d40ff746a51b23e6085c1e4a7"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af4eeab0d40ff746a51b23e6085c1e4a7"></a>
void(*&#160;</td><td class="memItemRight" valign="bottom"><b>erase</b> )(size_t begin, size_t end, struct <a class="el" href="structsd__vector.html">sd_vector</a> *this)</td></tr>
<tr class="separator:af4eeab0d40ff746a51b23e6085c1e4a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77a4f4af1aa7a69a5d1c76401dd1e8f9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a77a4f4af1aa7a69a5d1c76401dd1e8f9"></a>
void(*&#160;</td><td class="memItemRight" valign="bottom"><b>swap</b> )(struct <a class="el" href="structsd__vector.html">sd_vector</a> *this, struct <a class="el" href="structsd__vector.html">sd_vector</a> *other)</td></tr>
<tr class="separator:a77a4f4af1aa7a69a5d1c76401dd1e8f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0d833069f5cd13ae96959594d44833c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac0d833069f5cd13ae96959594d44833c"></a>
void(*&#160;</td><td class="memItemRight" valign="bottom"><b>clear</b> )(struct <a class="el" href="structsd__vector.html">sd_vector</a> *this)</td></tr>
<tr class="separator:ac0d833069f5cd13ae96959594d44833c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1aa5c1149de70f36732466cecfb2a76e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1aa5c1149de70f36732466cecfb2a76e"></a>
void(*&#160;</td><td class="memItemRight" valign="bottom"><b>emplace</b> )(size_t position, void *value, struct <a class="el" href="structsd__vector.html">sd_vector</a> *this)</td></tr>
<tr class="separator:a1aa5c1149de70f36732466cecfb2a76e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92311d030c85a10802e942bc6f108ddf"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a92311d030c85a10802e942bc6f108ddf"></a>
void(*&#160;</td><td class="memItemRight" valign="bottom"><b>shiftr</b> )(size_t begin, size_t space, struct <a class="el" href="structsd__vector.html">sd_vector</a> *this)</td></tr>
<tr class="separator:a92311d030c85a10802e942bc6f108ddf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5059a7c9d9b0490b241aa226926bb374"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5059a7c9d9b0490b241aa226926bb374"></a>
void(*&#160;</td><td class="memItemRight" valign="bottom"><b>shiftl</b> )(size_t begin, size_t space, struct <a class="el" href="structsd__vector.html">sd_vector</a> *this)</td></tr>
<tr class="separator:a5059a7c9d9b0490b241aa226926bb374"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a133a03f58c5944ea5a45b446b4512017"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a133a03f58c5944ea5a45b446b4512017"></a>
void(*&#160;</td><td class="memItemRight" valign="bottom"><b>info</b> )(char *info, struct <a class="el" href="structsd__vector.html">sd_vector</a> *this)</td></tr>
<tr class="separator:a133a03f58c5944ea5a45b446b4512017"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22691c181172fc7e7208dd0af61f995b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a22691c181172fc7e7208dd0af61f995b"></a>
struct <a class="el" href="structsd__vector.html">sd_vector</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><b>replicate</b> )(struct <a class="el" href="structsd__vector.html">sd_vector</a> *this)</td></tr>
<tr class="separator:a22691c181172fc7e7208dd0af61f995b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><dl class="section author"><dt>Author</dt><dd>Phillipot Quentin </dd>
<dd>
Guiraud Emmanuel</dd></dl>
<p>{Main structure of the vector containing the vector size (the size that is actually reachable by the user), its capacity (the size actually reserved in memory) and its containt itself into an array of pointors. In order to store every possible types, generic void* type is used. Accessing to an element require the use of a cast before the accessing function. In order to facilitate the use of the associated function, the <a class="el" href="structsd__vector.html">sd_vector</a> prefixe is not needed in use} </p>
</div><hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="vector_8h_source.html">vector.h</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Dec 16 2014 18:46:34 for My Project by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
